COMMENT

This program is part of the Algol 68 Genie test.

The test set contains programs from the 
   "Revised Mathematisch Centrum Algol 68 Test Set" [1979] 
and synthetic programs from the 
   "Rennes test set" [1975].
These test sets are available from:
   www.dickgrune.com/CS/Algol68
or from the Vrije Universiteit Amsterdam:
   ftp://ftp.cs.vu.nl/pub/dick/Algol68

Above two test sets were used in the 1980's to validate the ALGOL68RS compilers [Algol Bulletin 49.2]. 

The "Rennes test-set" programs are automatically generated from the Algol 68 grammar using a formalism from Bernard Houssais (Universite de Rennes).  Especially the "Rennes test set" has proven very effective in exposing problems in Algol 68 implementations.  All programs are converted to upper-stropping and reformatted for lay-out.

The "Revised Mathematisch Centrum test set" programs are not synthetic like those in the "Rennes test set", but are selected programmer-made applications that are distributed with Algol 68 Genie with kind permission of the author of this test set, Dick Grune.

Note that part of the programs in this test set will fail; most due to intentional (syntactic or runtime) errors and a few due to differences between Algol 68 Genie and revised Algol 68. 

COMMENT

PR regression PR

#stow01#
BEGIN
  print(("Results must be:", newline,
          FALSE, TRUE, TRUE, FALSE, newline,
          1, 1, TRUE, TRUE, newline,
          2, 2, FALSE, FALSE, newline,
          newline,
          1, newline,
          2, 1, 2, newline,
          3, 2, 3, newline,
          []COMPL((0, 0), (1, 1), (0, 0)), newline,
          newline, "Results are:", newline));
  [1:2] PROC BOOL i; INT j;
  i[1]:= BOOL: j=2; i[2]:= BOOL : j=1;
  j:= 1; print(i[1]); print(i[2]);
  j:= 2; print(i[1]); print(i[2]);
  print(newline);
  [] STRUCT(INT i, BOOL j) k =((1, TRUE), (2, FALSE));
  FOR i TO UPB k
  DO
    print(((i OF k)[i], i OF k[i], (j OF k)[i], j OF k[i],
            newline))
  OD;
  print(newline);
  print( a OF (STRUCT(INT a, b) s = (1, 0); s));
  print(newline);
  [ 2 : 3 ] INT cc;
  print((LWB cc, LWB cc[:], LWB cc[]));
  print(newline);
  print((UPB cc, UPB cc[:], UPB cc[]));
  print(newline);
  [ 1 : 3 ] COMPL r:= (0, (0, 1), 1);
  re OF r:= im OF r; print(r);
  SKIP
END
