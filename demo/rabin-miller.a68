COMMENT 
   Rabin-Miller prime test: a probabilistic test on primality. 
   If a number does not pass, it is not prime. 
   If a number passes, it is prime with approximate probability
   1 - (1 / 4) ^ max trials.
COMMENT

INT max trials = 10, UNT p, m, pow := 2, INT b, MODE UNT = LONG LONG INT;

print ("Enter a number to determine its primality: ");
read (p);

# Disect the number under test in form p = (2 ^ b) * m + 1 #

FOR n WHILE pow < p
DO IF (p - 1) MOD pow = 0
   THEN b := n;
        m := (p - 1) OVER pow
   FI;
   pow *:= 2
OD;

printf (($lg(0), " = 2 ^ ", g(0), " * ", g(0), " + 1"$, p, b, m));

# Test primality #

BOOL is prime := TRUE;

TO max trials WHILE is prime
DO UNT a = 1 + ENTIER (next random * (p - 1));
   IF OP GCD = (UNT a, b) UNT:
         IF b = 0 
         THEN ABS a
         ELSE b GCD (a MOD b)
         FI;
      PRIO GCD = 6;
      p GCD a ~= 1
   THEN is prime := FALSE
   ELIF PROC up mod = (UNT a, b, m) UNT: # (a ^ b) MOD m #
        (UNT prod := 1, expo := b, pow := a MOD m;
         WHILE expo ~= 0
         DO IF expo MOD 2 = 1
            THEN prod := (prod * pow) MOD m
            FI;
            pow := pow ^ 2 MOD m;
            expo OVERAB 2
         OD;
         prod
        ); 
        UNT z := up mod (a, m, p);
        z = 1 OR z = p - 1
   THEN SKIP # pass #
   ELSE BOOL pass := FALSE;
        TO b WHILE NOT pass
        DO z := up mod (z, 2, p); 
           pass := z = p - 1
        OD;
	is prime := is prime AND pass
   FI
OD;

IF is prime
THEN printf (($lg(0)" is prime with approximate probability ", h$, p, 1.0 - 0.25 ^ max trials))
ELSE printf (($lg(0), " is a composite number"$, p))
FI


