# This program is part of the Revised Mathematisch Centrum Algol 68 Test Set
  by Dick Grune [1979].

  This program is distributed with Algol 68 Genie with
  kind permission of Dick Grune.'

  These test sets are available from:
     www.dickgrune.com/CS/Algol68
  or from the Vrije Universiteit Amsterdam:
     ftp://ftp.cs.vu.nl/pub/dick/Algol68/ #

PR quiet PR

#simp04#
multiples:structures:
BEGIN #Multiple values# print (("Multiple values", newline));
      [1 : 100] INT i, j, k;
      
      FOR l TO 100 
      DO i[l] := j[l] := k[l] := l
      OD;
      FOR l TO 100 
      DO IF i[l] /= l OR j[l] /= l OR k[l] /= l
         THEN print ("Bad multiple assignation")
         FI
      OD;
      [1 : 100] REAL p;
      
      p[1] := 1.0;
      p[1 : 5] := (2.0, 3.0, 4.0, 5.0, 6.0);
      print ((newline, "Values are 2.0 - 6.0", newline, p[1 : 5]));
      print (newline);
      #Test the @ workings#
      p[2 : 6
        #implicit @1#
        ] := (2.0, 3.0, 4.0, 5.0, 6.0);
      print ((newline, "Values are 2.0, 2.0 - 6.0", newline, p[1 : 6], newline));
      p[2 : 3@8] := p[3 : 4@8];
      print ((newline, "Values are 2.0, 3.0, 4.0, 4.0", newline, p[1 : 4@7], newline));
      print ((newline, "Values are 11, 4", UPB p[1 : 3@9], UPB p[1 : 0@5], newline));
      [1 : 10, 1 : 10] INT l;
      
      FOR i TO 10 
      DO FOR j TO 10 
         DO l[i, j] := 100
         OD
      OD;
      FOR i TO 2 
      DO FOR j TO 10 
         DO l[1 : 2, 1 : 10][i, j] := 11
         OD
      OD;
      print ((newline, "Values are 20 instances of 11 followed by ", "80 of 100", newline, l, newline));
      #Structures# STRUCT ([1 : 2] INT m, [1 : i[5]
                                           # whose value is 5 from above#
                                           ] REAL g, BOOL t) s1, s2;
      
      t OF s1 := t OF s2 := l[1, 1] = l[1 : 1, 1 : 2][1, 1];
      #true#
      FOR m TO UPB m OF s1 
      DO (m OF s1)[m] := ((m OF s2)[3 - m] := 50) + 1
      OD;
      g OF s1 := (g OF s2)[] := (1.0, 2.0, 3.0, 4.0, 5.0);
      print ((newline, "Structures:", newline, "Values are 51, 51, 1.0 to 5.0, TRUE:", newline, s1, newline, newline, "Values are 50, 50, 1.0 to 5.0, TRUE:", newline, s2, newline));
      #REF STRUCT's#
      [1 : 2] REF STRUCT ([] INT m, [] REAL g, BOOL t) ss1 := (s1, s2);
      
      print ((newline, "Values same as last two lines:", newline, ss1[1], newline, ss1[2], newline));
      t OF ss1[2] := FALSE;
      print ((newline, "Values are TRUE, FALSE: ", t OF s1, t OF s2))
END