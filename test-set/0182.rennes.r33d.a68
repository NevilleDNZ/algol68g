COMMENT

This program is part of the Algol 68 Genie test.

The test set contains programs from the 
   "Revised Mathematisch Centrum Algol 68 Test Set" [1979] 
and synthetic programs from the 
   "Rennes test set" [1975].
These test sets are available from:
   www.dickgrune.com/CS/Algol68
or from the Vrije Universiteit Amsterdam:
   ftp://ftp.cs.vu.nl/pub/dick/Algol68

Above two test sets were used in the 1980's to validate the ALGOL68RS compilers [Algol Bulletin 49.2]. 

The "Rennes test-set" programs are automatically generated from the Algol 68 grammar using a formalism from Bernard Houssais (Universite de Rennes).  Especially the "Rennes test set" has proven very effective in exposing problems in Algol 68 implementations.  All programs are converted to upper-stropping and reformatted for lay-out.

The "Revised Mathematisch Centrum test set" programs are not synthetic like those in the "Rennes test set", but are selected programmer-made applications that are distributed with Algol 68 Genie with kind permission of the author of this test set, Dick Grune.

Note that part of the programs in this test set will fail; most due to intentional (syntactic or runtime) errors and a few due to differences between Algol 68 Genie and revised Algol 68. 

COMMENT

PR regression PR

# r33d #
(print(("void collateral clauses",newline)) ;
 INT  vf = 718*2 ;
 INT  ctr:=0,mem,ctrt ;
 PROC  controle = ( INT  incr) VOID  :
    (ctr/=mem+incr |
    print(("count er in test",ctrt,ctr,mem+incr,newline))) ;
 BOOL  boo:= TRUE  ,  INT  decr,k,vi,
 MODE   M  =  UNION ( INT , STRING ) ,
 M  vu:="vide" ,
 PROC  p1 =  INT  : 1 ,
[] M  tre=(1,"vide","vide") ,
 STRUCT ( M  a,b) srm = ("vide",2) ;

(ctrt:=   1;mem:=ctr ;
 REF  INT  xx ,  INT  incr = 0 ;
(
(boo | boo:= FALSE  ; ctr+:=7)
;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; ctr+:=7;
ea : ctrt:=   2 ;
 IF 
(boo | boo:= FALSE  ; ctr+:=7)
;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
;  TRUE  THEN ctr+:=7 FI ;
eb : ctrt:=   3 ;
(
(boo | boo:= FALSE  ; ctr+:=7)
 ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; 1 | ctr+:=7 , "vide" ) ;
ec : ctrt:=   4 ;
 CASE 
(boo | boo:= FALSE  ; ctr+:=7)
 ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; vu IN ( INT ): SKIP  ESAC  ; ctr+:=7 ;
ed : ctrt:=   5 ;
 FOR  i  WHILE 
(boo | boo:= FALSE  ; ctr+:=7)
 ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ;  FALSE  DO  REF  INT  xx; SKIP  OD ;ctr+:=7;
ee : ctrt:=   6 ;
 TO  4  DO 
(boo | boo:= FALSE  ; ctr+:=7)
 ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; ctr+:=7 OD  ;
ef : ctrt:=   7 ;
 IF 
(boo | boo:= FALSE  ; ctr+:=7)
 ;  TRUE  THEN 
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; ctr+:=7  FI  ;
eg : ctrt:=   8 ;
(
(boo | boo:= FALSE  ; ctr+:=7)
 ;  FALSE  |  SKIP  |
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; ctr+:=7 ) ;
eh : ctrt:=   9 ;
 CASE  0  IN  1,2  OUT 
(boo | boo:= FALSE  ; ctr+:=7)
 ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; ctr+:=7  ESAC  ;
ei : ctrt:=  10 ;
( SKIP  ;
(boo | boo:= FALSE  ; ctr+:=7)
 ; vu | ( INT ): SKIP  |  SKIP  ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; ctr+:=7) ;
ej : ctrt:=  11 ;
 decr:=2 ;  FOR  i  TO  7
    WHILE   BOOL  b=(decr-:=1)>=0 ; (b|
   (boo | boo:= FALSE  ; ctr+:=7)
   ) ;  REF  INT xx ; b
    DO   SKIP  ;
    BEGIN  boo:= TRUE  , ctr+:=15  END 
     OD  ; ctr+:=7 ;
ek : ctrt:=  12 ;

(boo | boo:= FALSE  ; ctr+:=7)
 ; ( TRUE  |
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 | "vide") ; ctr+:=7 ;
el : ctrt:=  13 ;
 IF 
(boo | boo:= FALSE  ; ctr+:=7)
 ;  FALSE  THEN  REF  INT  xx ;  SKIP  ELSE 
 BEGIN  boo:= TRUE  , ctr+:=15  END 
  FI  ; ctr+:=7;
em : ctrt:=  14 ;
(
(boo | boo:= FALSE  ; ctr+:=7)
 ; -1 | "vide" , "vide" |  REF  INT  xx ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ) ; ctr+:=7 ;
en : ctrt:=  15 ;
 CASE   REF  INT  xx ; vu
 IN ( INT  a):"vide"  OUT 
(boo | boo:= FALSE  ; ctr+:=7)
 ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
  ESAC  ; ctr+:=7 ;
eo : ctrt:=  16 ;

(boo | boo:= FALSE  ; ctr+:=7)
 ; ( SKIP  ,
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 , (1.0,0)) ; ctr+:=7 ;
ep : ctrt:=  17 ;
 CASE 
(boo | boo:= FALSE  ; ctr+:=7)
 ; 3 IN  (0,1,2) , "vide" ,
 BEGIN  boo:= TRUE  , ctr+:=15  END 
  ESAC  ; ctr+:=7 ;
eq : ctrt:=  18 ;
(
(boo | boo:= FALSE  ; ctr+:=7)
 ; vu | ( STRING ):
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 , ( INT ):"vide") ; ctr+:=7 ;
er : ctrt:=  19 ;
( PROC  p=( REF  INT  kk) VOID  :
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; p(
(boo | boo:= FALSE  ; ctr+:=7)
 )) ; ctr+:=7 ;
es : ctrt:=  20 ;

(boo | boo:= FALSE  ; ctr+:=7)
 ;  VOID  :
 BEGIN  boo:= TRUE  , ctr+:=15  END 
 ; ctr+:=7 ;
et : ctrt:=  21 ;

(boo | boo:= FALSE  ; ctr+:=7)
 ;
 BEGIN  boo:= TRUE  , ctr+:=15  END 
) ; ctr+:=7 ;
eu : controle(718)) ;

(ctrt:=  22;mem:=ctr ;
 REF  INT  xx ,  INT  incr = 0 ;
(
 SKIP 
;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; ctr+:=7;
ea : ctrt:=  23 ;
 IF 
 SKIP 
;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
;  TRUE  THEN ctr+:=7 FI ;
eb : ctrt:=  24 ;
(
 SKIP 
 ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; 1 | ctr+:=7 , "vide" ) ;
ec : ctrt:=  25 ;
 CASE 
 SKIP 
 ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; vu IN ( INT ): SKIP  ESAC  ; ctr+:=7 ;
ed : ctrt:=  26 ;
 FOR  i  WHILE 
 SKIP 
 ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ;  FALSE  DO  REF  INT  xx; SKIP  OD ;ctr+:=7;
ee : ctrt:=  27 ;
 TO  4  DO 
 SKIP 
 ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; ctr+:=7 OD  ;
ef : ctrt:=  28 ;
 IF 
 SKIP 
 ;  TRUE  THEN 
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; ctr+:=7  FI  ;
eg : ctrt:=  29 ;
(
 SKIP 
 ;  FALSE  |  SKIP  |
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; ctr+:=7 ) ;
eh : ctrt:=  30 ;
 CASE  0  IN  1,2  OUT 
 SKIP 
 ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; ctr+:=7  ESAC  ;
ei : ctrt:=  31 ;
( SKIP  ;
 SKIP 
 ; vu | ( INT ): SKIP  |  SKIP  ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; ctr+:=7) ;
ej : ctrt:=  32 ;
 decr:=2 ;  FOR  i  TO  7
    WHILE   BOOL  b=(decr-:=1)>=0 ; (b|
    SKIP 
   ) ;  REF  INT xx ; b
    DO   SKIP  ;
   ( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
   (1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
   tre[3],a OF srm,( INT a) VOID :ctr-:=100)
     OD  ; ctr+:=7 ;
ek : ctrt:=  33 ;

 SKIP 
 ; ( TRUE  |
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 | "vide") ; ctr+:=7 ;
el : ctrt:=  34 ;
 IF 
 SKIP 
 ;  FALSE  THEN  REF  INT  xx ;  SKIP  ELSE 
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
  FI  ; ctr+:=7;
em : ctrt:=  35 ;
(
 SKIP 
 ; -1 | "vide" , "vide" |  REF  INT  xx ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ) ; ctr+:=7 ;
en : ctrt:=  36 ;
 CASE   REF  INT  xx ; vu
 IN ( INT  a):"vide"  OUT 
 SKIP 
 ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
  ESAC  ; ctr+:=7 ;
eo : ctrt:=  37 ;

 SKIP 
 ; ( SKIP  ,
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 , (1.0,0)) ; ctr+:=7 ;
ep : ctrt:=  38 ;
 CASE 
 SKIP 
 ; 3 IN  (0,1,2) , "vide" ,
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
  ESAC  ; ctr+:=7 ;
eq : ctrt:=  39 ;
(
 SKIP 
 ; vu | ( STRING ):
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 , ( INT ):"vide") ; ctr+:=7 ;
er : ctrt:=  40 ;
( PROC  p=( REF  INT  kk) VOID  :
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; p(
 SKIP 
 )) ; ctr+:=7 ;
es : ctrt:=  41 ;

 SKIP 
 ;  VOID  :
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
 ; ctr+:=7 ;
et : ctrt:=  42 ;

 SKIP 
 ;
( BEGIN  SKIP , REF  M ( NIL ), HEAP  M  END , LOC  M :=5,ctr:=:mem,
(1,2,ctr+100),( REAL  x:=3.14;ctr-mem*5/x),-p1,ctr+:=22 ,
tre[3],a OF srm,( INT a) VOID :ctr-:=100)
) ; ctr+:=7 ;
eu : controle(718)) ;

print((ctr," tests ",(ctr=vf|"ok"|"error"))))
