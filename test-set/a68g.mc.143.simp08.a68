# This program is part of the
 
     Revised Mathematisch Centrum Algol 68 Test Set

  by Dick Grune [1979].

  This program is distributed with Algol 68 Genie with
  kind permission of Dick Grune.

  This test set is available from:

     http://www.dickgrune.com/CS/Algol68

  or from the Vrije Universiteit Amsterdam:

     ftp://ftp.cs.vu.nl/pub/dick/Algol68/ #

PR quiet PR

#simp08#

# Simple coercions #
(print (("Prediction:     results:", newline));
 PROC print ia = (STRING pred) VOID:
      print ((pred, ": ", ia, newline));
 
 [1 : 3] INT ia := (1, 2, 3);
 
 print ia ("+1+2+3        ");
 # dereferencing # INT i = LOC REF INT := ia[1]
 #twice dereferenced,
                                        at the right moment #
 ;
 
 print (("+1            : ", i, newline));
 REF INT ri := ia[2];
 
 # no deref # REF INT (ri) := -2;
 print ia ("+1-2+3        ");
 # deproceduring #
 PROC pri = REF INT: ia[3];
 
 pri := -3 # soft deproc # ;
 print ia ("+1-2-3        ");
 PROC pria = REF [] INT: ia;
 
 pria[1] := pria[2];
 print ia ("-2-2-3        ");
 # uniting # UNION (REAL, [] INT, [, ] INT) unia =  # some-uniting # UNION (REAL, [] INT) 
 # cast #
 
 # one-uniting #
 (ia) # deref# ;
 
 ia := (3, 2, 1) # spoil ia # ;
 CASE unia
 IN ([] INT ia): (print (("-2-2-3        : ", ia, newline));
                  print (("-2-2-3        : ", unia # why not ? # , newline));
                  print ia ("+3+2+1        ")
    # spoiled ia #
    )
 OUT print ("Bad case of case")
 ESAC;
 # widening # REAL x = ia[1];
 
 COMPL z = x;
 
 print (("3e0,3e0i0e0   : ", x, z, newline));
 [] BOOL b = 8r52,
 STRING s = bytes pack ("abc");
 
 print (("f...ftftftfabc: ", b, s, newline));
 # rowing #
 [1 : 1, 1 : 3] INT iaa;
 
 FOR i TO 3 
 DO iaa[1, i] := 5 + i
 OD;
 PROC print iaa = (STRING pred) VOID:
      print ((pred, ": ", LWB iaa, UPB iaa, 2 LWB iaa, 2 UPB iaa, iaa, newline));
 
 print iaa ("+1+1+1+3+6+7+8");
 ia := iaa[1, ];
 print ia ("+6+7+8        ");
 ia := (1, 2, 3);
 iaa := ia # rowing # ;
 print iaa ("+1+1+1+3+1+2+3");
 # "hipping" # REF INT p = NIL, q = NIL;
 
 print (("true          : ", p :=: q, newline));
 ia := (1, 5, l) # no assignation # ;
 l: print ia ("+1+2+3        ");
 ia := (5, SKIP, 7);
 ia[2] := 6;
 print ia ("+5+6+7        "))