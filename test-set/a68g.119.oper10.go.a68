# This program is part of the Revised Mathematisch Centrum Algol 68 Test Set
  by Dick Grune [1979].
 
  This program is distributed with Algol 68 Genie with
  kind permission of Dick Grune.
 
  The complete test set is an open-access publication, 
  self-archived by Dick Grune and available from:
     www.dickgrune.com/CS/Algol68
  or from the Vrije Universiteit Amsterdam:
     ftp://ftp.cs.vu.nl/pub/dick/Algol68/ #
 
#oper10#
BEGIN # Dyadic operators, non-bold monads #
      INT decls := 0;
      
      # the first declaration is different to avoid a recursive loop #
      OP + = (INT a, b) INT:
         (INT c := a; c PLUSAB b);
      
      decls PLUSAB 1;
      OP +< = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +> = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +/ = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP += = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +* = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +<:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +>:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +/:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +=:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +*:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +<=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +>=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +/=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +==: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP +*=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP - = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -< = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -> = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -/ = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -* = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -<:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP ->:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -/:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -=:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -*:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -<=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP ->=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -/=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -==: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP -*=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP % = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %< = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %> = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %/ = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %* = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %<:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %>:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %/:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %=:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %*:= = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %<=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %>=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %/=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %==: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      OP %*=: = (INT a, b) INT: a + b;
      
      decls PLUSAB 1;
      PRIO + = 1, +< = 1, +> = 1, +/ = 1, += = 1, +* = 1, +:= = 1, +<:= = 1, +>:= = 1, +/:= = 1, +=:= = 1, +*:= = 1, +=: = 1, +<=: = 1, +>=: = 1, +/=: = 1, +==: = 1, +*=: = 1, - = 1, -< = 1, -> = 1, -/ = 1, -= = 1, -* = 1, -:= = 1, -<:= = 1, ->:= = 1, -/:= = 1, -=:= = 1, -*:= = 1, -=: = 1, -<=: = 1, ->=: = 1, -/=: = 1, -==: = 1, -*=: = 1, % = 1, %< = 1, %> = 1, %/ = 1, %= = 1, %* = 1, %:= = 1, %<:= = 1, %>:= = 1, %/:= = 1, %=:= = 1, %*:= = 1, %=: = 1, %<=: = 1, %>=: = 1, %/=: = 1, %==: = 1, %*=: = 1;
      
      print (("Should print two equal integers (number of non-bold monads)", newline, 0 + 1 +< 1 +> 1 +/ 1 += 1 +* 1 +:= 1 +<:= 1 +>:= 1 +/:= 1 +=:= 1 +*:= 1 +=: 1 +<=: 1 +>=: 1 +/=: 1 +==: 1 +*=: 1 - 1 -< 1 -> 1 -/ 1 -= 1 -* 1 -:= 1 -<:= 1 ->:= 1 -/:= 1 -=:= 1 -*:= 1 -=: 1 -<=: 1 ->=: 1 -/=: 1 -==: 1 -*=: 1 % 1 %< 1 %> 1 %/ 1 %= 1 %* 1 %:= 1 %<:= 1 %>:= 1 %/:= 1 %=:= 1 %*:= 1 %=: 1 %<=: 1 %>=: 1 %/=: 1 %==: 1 %*=: 1, decls))
END