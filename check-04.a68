PR echo "[4] Recursive back-tracking algorithm" PR

# How many ways are there to split 10 euros in
  2 euro, 1 euro, 50 ct, 20 ct, 10 ct, 5 ct?
#

PROC count = (INT rest, max) INT:
   IF rest = 0
   THEN 1 # Just right, combination found #
   ELIF rest < 0
   THEN 0 # Invalid, subtracted too much #
   ELSE INT combinations := 0;
        FOR i TO UPB values
        WHILE values[i] <= max
        DO combinations +:= count (rest - values[i], values[i])
        OD;
        combinations
   FI;

[] INT values = (5, 10, 20, 50, 100, 200), INT amount = 1000 # cents #;
printf (($"There are"xg(0)x"ways to split",xg(0)x"cents in", n(UPB (values)) (xg(0))x"cent coins"$, count (amount, amount), amount, values))
