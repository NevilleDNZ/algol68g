# This program is part of the Revised Mathematisch Centrum Algol 68 Test Set
  by Dick Grune [1979].
 
  This program is distributed with Algol 68 Genie with
  kind permission of Dick Grune.
 
  The complete test set is an open-access publication, 
  self-archived by Dick Grune and available from:
     www.dickgrune.com/CS/Algol68
  or from the Vrije Universiteit Amsterdam:
     ftp://ftp.cs.vu.nl/pub/dick/Algol68/ #
 
#smio03#
BEGIN
# 10/08/73, R van Vliet; 30/09/75, revised.
Test the print and putroutines.#
    INT max ch n = # actual max char, formerly
        max char[standout channel] #
    (FILE f:= standout; INT i;
        on line end(f, (REF FILE f)BOOL: out);
        DO put(f, space) OD;
    out: i:= char number(f) -1; TO i DO put(f, backspace) OD; i);
    print(("Test 1", newline));
    print(("Test rather easy output", new line));
    COMPL z= -max real I -max real;
    print((-max int, -max real, z, FALSE, "a", newline));
    print(new line);
    MODE LINTREAL =UNION(
      INT, LONG INT, LONG LONG INT,
      REAL, LONG REAL, LONG LONG REAL
      );
    PROC maxim =(LINTREAL lir)LINTREAL:
      CASE lir IN (INT): max int,
        (LONG INT): long max int -LENG 1,
        (LONG LONG INT): long long max int -LENG LENG 2,
        (REAL): max real,
        (LONG REAL): long max real -LENG 1.0,
        (LONG LONG REAL): long long max real -LENG LENG 2.0
      ESAC;
    PROC lengthen =(LINTREAL lir)LINTREAL:
      CASE lir IN
        (INT k): LENG k,
        (LONG INT k): LENG k,
        (LONG LONG INT k):
          (print((new line, "No more long ints allowed")); k),
        (REAL k): LENG k,
        (LONG REAL k): LENG k,
        (LONG LONG REAL k):
          (print((newline, "No more long reals allowed")); k)
      OUT print((new line, "Lengthen called with illegal mode.",
         new line)); GOTO stop
      ESAC;
    LINTREAL lir := max int; print(lir);
    TO int lengths -1
    DO lir :=maxim(lengthen(lir)); print(lir) OD;
    LINTREAL int max =lir;
    lir:=lengthen(lir);
    print((new line, "The result of trying an extra long int is:",
                     lir,newline,newline));
    lir :=max real; print(lir);
    TO real lengths -1
    DO lir:= maxim(lengthen(lir)); print(lir) OD;
    lir :=lengthen(lir);
    print((newline, "The result of trying an extra long real is:",
                 lir, newline));
    print(new line);
    INT digitcount =
      # count the digits in int max #
      CASE int max IN
        (INT) : int width,
        (LONG INT): long int width,
        (LONG LONG INT) : long long int width
      OUT print((newline, "The actual mode of intmax is wrong",
        newline));GOTO stop
      ESAC;
    print(newline);
    TO max ch n -(digitcount +2) DO print(space) OD;
    print(int max);
    print((new line,
          "This integer must be printed at the end of a line",
      new line));
    TO max ch n -(digitcount +2) +1 DO print(space) OD;
    print(int max);
    print((new line,
        "and this integer at the beginning of a line",
      new line));
    TO max ch n -(2*(real width +exp width) +11)
    DO print(space) OD;
    print(z);
    print((new line,
      "This compl must be printed at the end of a line", new line));
    TO max ch n -(2*(real width +exp width) +11) +1
    DO print(space) OD;
    print(z);
    print((new line,
      "and this last compl at the beginning of a line", new line));
    print((newline, "Three times pi, in stepwise receding positions:",
           newline));
    print((pi, newline));   # no space #
    print((" ", float(pi, real width +exp width +4, real width -1,
                          exp width +1), newline));  # one space #
    print((" ", pi, newline));  # two spaces #
    TO max ch n -4 DO print (space) OD;
    print("lineoverflow");
    print((new line, "[]CHAR was tested", new line, new line));
    print(("Finally print a false and a true boolean", newline,
      FALSE, TRUE))
END
